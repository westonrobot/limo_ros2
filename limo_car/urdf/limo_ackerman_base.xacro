<?xml version="1.0"?>
<!--Auto: Zhui Li-->
<!-- Description: Diese xacro-Datei basiert auf Regeln und definiert Funktionen durch xacro,
um die Erstellung der Gesamtstruktur des Wagens in Ackerman-Type zu ermöglichen. Die Konstruktion einiger dieser Strukturen erfolgt
in externen Dateien.-->

<robot name="limo_ackerman" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- assoziiert mit anderen hergestellten Modellen -->
    <xacro:arg name="robot_namespace" default="/" />
    <xacro:include filename="$(find limo_car)/urdf/limo_anteil.xacro" />
    <xacro:include filename="$(find limo_car)/urdf/limo_steering_hinge.xacro" />

    <!-- definiert Value -->
    <xacro:property name="M_PI" value="3.14159"/>

    <xacro:property name="base_mass" value="2.1557"/>
    <xacro:property name="base_x_size" value="0.13" />
    <xacro:property name="base_y_size" value="0.12" />
    <xacro:property name="base_z_size" value="0.10" />
<!--    <xacro:property name="base_x_size" value="0.19" />-->
<!--    <xacro:property name="base_y_size" value="0.31" />-->
<!--    <xacro:property name="base_z_size" value="0.12" />-->



    <xacro:property name="wheelbase" value="0.2"/>
    <xacro:property name="track" value="0.14"/>
    <xacro:property name="wheel_vertical_offset" value="-0.100998" />


    <xacro:property name="wheel_mass" value="0.5" />
    <xacro:property name="wheel_length" value="0.045" />
    <xacro:property name="wheel_radius" value="0.045" />

    <!-- definieren die Macro-Function für die Rechnungen der Matrizen für Trägheitsmoment-->
    <!-- Kugel -->
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <origin xyz="0.0 0.0 0.0" />
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                     iyy="${2*m*r*r/5}" iyz="0"
                     izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>
    <!-- Zylinder -->
    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <origin xyz="0.0 0.0 0.0" />
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                     iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                     izz="${m*r*r/2}" />
        </inertial>
    </xacro:macro>
    <!-- Quader -->
    <xacro:macro name="box_inertial_matrix" params="m w l h">
        <inertial>
            <origin xyz="0.0 0.0 0.0" />
            <mass value="${m}" />
            <inertia ixx="${m*(w*w+h*h)/12}" ixy = "0" ixz = "0"
                     iyy="${m*(h*h+l*l)/12}" iyz = "0"
                     izz="${m*(w*w+l*l)/12}" />
        </inertial>
    </xacro:macro>



    <!-- -->
    <!-- definiert ein Nullpunkt, um Modell aufzubauen. Es ist einfach für weitere Darstellungspostion in Simulation-Umgebung -->
    <link name="base_footprint"/>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 0.15" rpy="0 0 0"/>
    </joint>

    <!-- herstellt base_link als Karosserie -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 -0.15" rpy="0 0 1.57" />
            <geometry>
                <mesh filename="package://limo_car/meshes/limo_base.dae" scale="1 1 1"/>
            </geometry>
        </visual>
        <!-- Modell für physikalische Kollision zu modellieren. -->
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
            </geometry>
        </collision>
        <xacro:box_inertial_matrix  m="${base_mass}" w="${base_x_size}" l="${base_y_size}" h="${base_z_size}" />
    </link>

<!--    &lt;!&ndash; mit macro-function renchnet die Trägheitsmoment &ndash;&gt;-->
<!--    <link name="inertial_link">-->
<!--        <inertial>-->
<!--            <origin xyz="0.0 0.0 0.0" />-->
<!--            <mass value="${base_mass}" />-->
<!--            -->
<!--            <inertia ixx="0.24" ixy="0" ixz="0"-->
<!--                     iyy="0.96" iyz="0"-->
<!--                     izz="0.96" />-->
<!--        </inertial>-->
<!--    </link>-->
<!--    &lt;!&ndash; verbindet link für Trägheitsmonent und Modell &ndash;&gt;-->
<!--    <joint name="inertial_joint" type="fixed">-->
<!--        <origin xyz="0 0 0" rpy="0 0 0" />-->
<!--        <parent link="base_link" />-->
<!--        <child link="inertial_link" />-->
<!--    </joint>-->

    <!--  Zwei hinten Räder werden anhand eines externen Modells erstellt und mit dem Körper verbunden-->
    <link name="hinten_left_wheel_link">
        <!--        <inertial>-->
        <!--            <origin xyz="0 0 0" />-->
        <!--            <mass value="0.5" />-->
        <!--            <inertia ixx="0.01055" ixy="0" ixz="0" iyy="0.00075" iyz="0" izz="0.01055" /> -->
        <!--        </inertial>-->
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://limo_car/meshes/limo_wheel.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 ${wheel_length/2} 0" rpy="1.57 0 0" />
            <geometry>
                <cylinder length="${wheel_length}" radius="${wheel_radius}" />
            </geometry>
        </collision>
        <xacro:cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>
    <joint name="hinten_left_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="hinten_left_wheel_link"/>
        <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
        <axis xyz="0 1 0"/>
    </joint>

    <link name="hinten_right_wheel_link">
        <!--        <inertial>-->
        <!--            <origin xyz="0 0 0" />-->
        <!--            <mass value="0.5" />-->
        <!--            <inertia ixx="0.01055" ixy="0" ixz="0" iyy="0.00075" iyz="0" izz="0.01055" /> -->
        <!--        </inertial>-->
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://limo_car/meshes/limo_wheel.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 ${wheel_length/2} 0" rpy="1.57 0 0" />
            <geometry>
                <cylinder length="${wheel_length}" radius="${wheel_radius}" />
            </geometry>
        </collision>
        <xacro:cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>

    <joint name="hinten_right_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="hinten_right_wheel_link"/>
        <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="${M_PI} 0 0" />
        <axis xyz="0 -1 0"/>
    </joint>


    <!-- Instanziierung anderer Teile entsprechend den Makrofunktionen in "limo_anteil.xacro" -->
    <xacro:limo_laser parent_prefix="base_link" frame_prefix="laser">
        <origin xyz="0.103 0 -0.034" rpy="0 0 0"/>
    </xacro:limo_laser>

    <xacro:limo_depth_camera parent_prefix="base_link" frame_prefix="depth_camera">
        <origin xyz="0.084 0 0.03" rpy="0 0 0"/>
    </xacro:limo_depth_camera>

    <xacro:limo_imu parent_prefix="base_link" frame_prefix="imu">
        <origin xyz="0.0 0 -0.1" rpy="0 0 0"/>
    </xacro:limo_imu>

    <!-- ruft Steuerscharnier mit vorderem Räder auf -->
    <xacro:limo_left_steering_hinge parent_prefix="base_link" wheel_prefix="left_steering_hinge">
        <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:limo_left_steering_hinge>

    <xacro:limo_right_steering_hinge parent_prefix="base_link" wheel_prefix="right_steering_hinge">
        <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="${M_PI} 0 0" />
    </xacro:limo_right_steering_hinge>
</robot>
